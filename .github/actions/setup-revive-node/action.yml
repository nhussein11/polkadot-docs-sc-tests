name: "Setup Revive Node"
description: "Clones, builds, and caches the Revive node from polkadot-smart-contracts-docs-tests repository"

inputs:
  rust-version:
    description: "Rust version to use for building"
    required: true
  polkadot-sdk-ref:
    description: "Git ref (commit/branch/tag) for polkadot-sdk"
    required: true
    default: "8e2b6f742a38bb13688e12abacded0aab2dbbb23"
  cache-key-suffix:
    description: "Suffix for build cache key"
    required: false
    default: ""
  binaries-dir:
    description: "Directory (relative to repo root) to place built binaries"
    required: false
    default: "hardhat-examples/binaries"


runs:
  using: "composite"
  steps:
    - name: Setup Rust
      uses: ./.github/actions/setup-rust
      with:
        rust-version: ${{ inputs.rust-version }}

    - name: Cache cargo registry and git
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-home-${{ runner.os }}-${{ runner.arch }}-${{ inputs.rust-version }}-${{ hashFiles('polkadot-sdk/**/Cargo.lock') }}${{ inputs.cache-key-suffix }}
        restore-keys: |
          cargo-home-${{ runner.os }}-${{ runner.arch }}-${{ inputs.rust-version }}-
          cargo-home-${{ runner.os }}-${{ runner.arch }}-

    - name: Clone revive-node
      shell: bash
      run: |
        echo "ðŸ“¥ Cloning revive-node from https://github.com/paritytech/polkadot-sdk (branch: ${{ inputs.polkadot-sdk-ref }})..."
        
        if [ -d "revive-node" ]; then
          echo "ðŸ§¹ Cleaning existing revive-node directory..."
          rm -rf revive-node
        fi
        
        # Clone with sparse checkout to get only the revive-node directory
        git clone --depth 1 https://github.com/paritytech/polkadot-sdk
        cd polkadot-sdk
        git fetch --depth 1 origin ${{ inputs.polkadot-sdk-ref }}
        git checkout ${{ inputs.polkadot-sdk-ref }}

        echo "âœ… revive-node cloned successfully"


    - name: Cache build artifacts
      id: build-cache
      uses: actions/cache@v4
      with:
        path: |
          polkadot-sdk/target
        key: target-${{ runner.os }}-${{ runner.arch }}-${{ inputs.rust-version }}-${{ inputs.polkadot-sdk-ref }}-${{ hashFiles('polkadot-sdk/**/Cargo.lock') }}${{ inputs.cache-key-suffix }}
        restore-keys: |
          target-${{ runner.os }}-${{ runner.arch }}-${{ inputs.rust-version }}-${{ inputs.polkadot-sdk-ref }}-
          target-${{ runner.os }}-${{ runner.arch }}-${{ inputs.rust-version }}-
          target-${{ runner.os }}-${{ runner.arch }}-

    - name: Setup sccache
      uses: mozilla-actions/sccache-action@97f4987191bb3fb0fe56b6755b1e0b3b1d3dfc2b
    
    - name: Enable sccache
      shell: bash
      run: |
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

    - name: Build revive-dev-node
      if: steps.build-cache.outputs.cache-hit != 'true'
      working-directory: polkadot-sdk/
      shell: bash
      run: |
        echo "ðŸ”¨ Building revive-dev-node..."
        echo "ðŸ“Š Available disk space:"
        df -h
        
        # Set build optimizations
        export CARGO_PROFILE_RELEASE_LTO=thin
        export CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1
        
        # Build with progress and error handling
        cargo build -p revive-dev-node --bin revive-dev-node --release --locked
        cargo build -p pallet-revive-eth-rpc --bin eth-rpc --release --locked

        echo "âœ… Build completed successfully"
        
        echo "ðŸ“Š Final disk space:"
        df -h

    - name: Copy (overwrite) binaries
      shell: bash
      run: |
        DEST_DIR="${{ github.workspace }}/${{ inputs.binaries-dir }}"
        mkdir -p "$DEST_DIR"
        cp polkadot-sdk/target/release/revive-dev-node "$DEST_DIR/revive-dev-node"
        cp polkadot-sdk/target/release/eth-rpc "$DEST_DIR/eth-rpc"
        chmod +x "$DEST_DIR/revive-dev-node" "$DEST_DIR/eth-rpc"
        ls -la "$DEST_DIR"